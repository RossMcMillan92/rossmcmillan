@charset "UTF-8";
/* ----------------------------------------------

	Based on ITCSS by Harry Roberts
	https://speakerdeck.com/dafed/managing-css-projects-with-itcss

	1. Settings 	- Variables, config.
	2. Tools 		- Mixins, functions
	3. Generic 		- Normalize, reset, * {}
	4. Base 		- Unclassed HTML rules
	5. Objects 		- Cosemetic-free design patterns
	6. Components 	- Chunks of UI
	7. Trumps 		- Helpers and overrides

---------------------------------------------- */
/* ----------------------------------------------
	1. Settings
---------------------------------------------- */
/* names allow us to loop and create class names, e.g. .card--alpha, .ui--beta
------------------------ */
/* ----------------------------------------------
	2. Tools
---------------------------------------------- */
/* Mixins
--------------------------------------------------- */
/* ----------------------------------------------
	3. Generic
---------------------------------------------- */
/* normalize.css v3.0.2 | MIT License | git.io/normalize */
/** 1. Set default font family to sans-serif. 2. Prevent iOS text size adjust after orientation change, without disabling user zoom. */
html { font-family: sans-serif; /* 1 */ -ms-text-size-adjust: 100%; /* 2 */ -webkit-text-size-adjust: 100%; /* 2 */ }

/** Remove default margin. */
body { margin: 0; }

/* HTML5 display definitions ========================================================================== */
/** Correct `block` display not defined for any HTML5 element in IE 8/9. Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox. Correct `block` display not defined for `main` in IE 11. */
article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary { display: block; }

/** 1. Correct `inline-block` display not defined in IE 8/9. 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera. */
audio, canvas, progress, video { display: inline-block; /* 1 */ vertical-align: baseline; /* 2 */ }

/** Prevent modern browsers from displaying `audio` without controls. Remove excess height in iOS 5 devices. */
audio:not([controls]) { display: none; height: 0; }

/** Address `[hidden]` styling not present in IE 8/9/10. Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22. */
[hidden], template { display: none; }

/* Links ========================================================================== */
/** Remove the gray background color from active links in IE 10. */
a { background-color: transparent; text-decoration: none; }

/** Improve readability when focused and also mouse hovered in all browsers. */
a:active, a:hover { outline: 0; }

/* Text-level semantics ========================================================================== */
/** Address styling not present in IE 8/9/10/11, Safari, and Chrome. */
abbr[title] { border-bottom: 1px dotted; }

/** Address style set to `bolder` in Firefox 4+, Safari, and Chrome. */
b, strong { font-weight: bold; }

/** Address styling not present in Safari and Chrome. */
dfn { font-style: italic; }

/** Address variable `h1` font-size and margin within `section` and `article` contexts in Firefox 4+, Safari, and Chrome. */
h1 { font-size: 2em; margin: 0.67em 0; }

/** Address styling not present in IE 8/9. */
mark { background: #ff0; color: #000; }

/** Address inconsistent and variable font size in all browsers. */
small { font-size: 80%; }

/** Prevent `sub` and `sup` affecting `line-height` in all browsers. */
sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; }

sup { top: -0.5em; }

sub { bottom: -0.25em; }

/* Embedded content ========================================================================== */
/** Remove border when inside `a` element in IE 8/9/10. */
img { border: 0; }

/** Correct overflow not hidden in IE 9/10/11. */
svg:not(:root) { overflow: hidden; }

/* Grouping content ========================================================================== */
/** Address margin not present in IE 8/9 and Safari. */
figure { margin: 1em 40px; }

/** Address differences between Firefox and other browsers. */
hr { box-sizing: content-box; height: 0; }

/** Contain overflow in all browsers. */
pre { overflow: auto; }

/** Address odd `em`-unit font size rendering in all browsers. */
code, kbd, pre, samp { font-family: monospace, monospace; font-size: 1em; }

/* Forms ========================================================================== */
/** Known limitation: by default, Chrome and Safari on OS X allow very limited styling of `select`, unless a `border` property is set. */
/** 1. Correct color not being inherited. Known issue: affects color of disabled elements. 2. Correct font properties not being inherited. 3. Address margins set differently in Firefox 4+, Safari, and Chrome. */
button, input, optgroup, select, textarea { color: inherit; /* 1 */ font: inherit; /* 2 */ margin: 0; /* 3 */ }

/** Address `overflow` set to `hidden` in IE 8/9/10/11. */
button { overflow: visible; }

/** Address inconsistent `text-transform` inheritance for `button` and `select`. All other form control elements do not inherit `text-transform` values. Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera. Correct `select` style inheritance in Firefox. */
button, select { text-transform: none; }

/** 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio` and `video` controls. 2. Correct inability to style clickable `input` types in iOS. 3. Improve usability and consistency of cursor style between image-type `input` and others. */
button, html input[type="button"], input[type="reset"], input[type="submit"] { -webkit-appearance: button; /* 2 */ cursor: pointer; /* 3 */ }

/** Re-set default cursor for disabled elements. */
button[disabled], html input[disabled] { cursor: default; }

/** Remove inner padding and border in Firefox 4+. */
button::-moz-focus-inner, input::-moz-focus-inner { border: 0; padding: 0; }

/** Address Firefox 4+ setting `line-height` on `input` using `!important` in the UA stylesheet. */
input { line-height: normal; }

/** It's recommended that you don't attempt to style these elements. Firefox's implementation doesn't respect box-sizing, padding, or width.  1. Address box sizing set to `content-box` in IE 8/9/10. 2. Remove excess padding in IE 8/9/10. */
input[type="checkbox"], input[type="radio"] { box-sizing: border-box; /* 1 */ padding: 0; /* 2 */ }

/** Fix the cursor style for Chrome's increment/decrement buttons. For certain `font-size` values of the `input`, it causes the cursor style of the decrement button to change from `default` to `text`. */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button { height: auto; }

/** 1. Address `appearance` set to `searchfield` in Safari and Chrome. 2. Address `box-sizing` set to `border-box` in Safari and Chrome (include `-moz` to future-proof). */
input[type="search"] { -webkit-appearance: textfield; /* 1 */ /* 2 */ box-sizing: content-box; }

/** Remove inner padding and search cancel button in Safari and Chrome on OS X. Safari (but not Chrome) clips the cancel button when the search input has padding (and `textfield` appearance). */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration { -webkit-appearance: none; }

/** Define consistent border, margin, and padding. */
fieldset { border: 1px solid #c0c0c0; margin: 0 2px; padding: 0.35em 0.625em 0.75em; }

/** 1. Correct `color` not being inherited in IE 8/9/10/11. 2. Remove padding so people aren't caught out if they zero out fieldsets. */
legend { border: 0; /* 1 */ padding: 0; /* 2 */ }

/** Remove default vertical scrollbar in IE 8/9/10/11. */
textarea { overflow: auto; }

/** Don't inherit the `font-weight` (applied by a rule above). NOTE: the default cannot safely be changed in Chrome and Safari on OS X. */
optgroup { font-weight: bold; }

/* Tables ========================================================================== */
/** Remove most spacing between table cells. */
table { border-collapse: collapse; border-spacing: 0; }

td, th { padding: 0; }

* { box-sizing: border-box; }

/*------------------------------------*\ $CLEARFIX
\*------------------------------------*/
/** Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php Extend the clearfix class with Sass to avoid the `.cf` class appearing over and over in your markup. */
.cf:after { content: ""; display: table; clear: both; }

/* endif */
/* ----------------------------------------------
	4. Base
---------------------------------------------- */
html { font-family: "Montserrat", sans-serif; font-size: 16px; line-height: 1.6; height: 100%; }

body { background-color: #EDF0F1; color: #1F1F1F; -webkit-font-smoothing: antialiased; top: 0 !important; height: 100%; overflow: auto; -webkit-overflow-scrolling: touch; font-weight: 300; }

h1, .alpha { font-size: 50px; }

h2, .beta { font-size: 25px; }

h3, .gamma { font-size: 20px; }

h4, .delta { font-size: 17px; }

h5, .epsilon { font-size: 15px; }

h6, .zeta { font-size: 13px; }

h1, h2, h3, h4, h5, h6 { line-height: 1.4; }

/** Where `margin-bottom` is concerned, this value will be the same as the base line-height. This allows us to keep a consistent vertical rhythm. As per: csswizardry.com/2012/06/single-direction-margin-declarations */
/** Base elements */
blockquote, p, address, ul, ol, dd, table, fieldset, figure, pre, hr, .landmark, .media { margin-top: 0; margin-bottom: 20px; margin-bottom: 1.25rem; }

h1, h2, h3, h4, h5, h6, hgroup { margin-top: 0; margin-bottom: 10px; margin-bottom: 0.625rem; }

/** Doubled up `margin-bottom` helper class. */
.landmark { margin-bottom: 40px; margin-bottom: 2.5rem; }

/** `hr` elements only take up a few pixels, so we need to give them special treatment regarding vertical rhythm. */
hr { margin-bottom: 18px; margin-bottom: 1.125rem; }

/** Where `margin-left` is concerned we want to try and indent certain elements by a consistent amount. Define that amount once, here. */
ul, ol, dd { margin-left: 20px; margin-left: 1.25rem; margin-bottom: 60px; margin-bottom: 3.75rem; }

.title--secondary, .intro, blockquote, .lede, .lead { font-family: "Montserrat", sans-serif; font-weight: 300; }

.title--primary, blockquote:after { font-family: "Montserrat", sans-serif; font-weight: 900; }

.intro, blockquote, .lede, .lead { font-size: 28px; font-size: 1.75rem; }
@media screen and (max-width: 530px) { .intro, blockquote, .lede, .lead { font-size: 20px; font-size: 1.25rem; } }

blockquote { font-size: 25px; font-size: 1.5625rem; position: relative; margin-left: 50px; margin-left: 3.125rem; }
blockquote:after { position: absolute; content: "\ÔÇ£"; top: 0; left: -50px; left: -3.125rem; font-size: 85px; font-size: 5.3125rem; line-height: 1.15; }
blockquote p { margin-bottom: 0; }
blockquote strong { font-size: 16px; font-size: 1rem; }
@media screen and (max-width: 530px) { blockquote { font-size: 20px; font-size: 1.25rem; margin-left: 37px; margin-left: 2.34375rem; }
  blockquote:after { font-size: 50px; font-size: 3.125rem; left: -37px; left: -2.34375rem; } }

table { width: 100%; }

thead td { background-color: #E73E2C; color: #fff; }

tbody tr:nth-of-type(odd) { background-color: #fbfbfb; }
tbody td { color: #1F1F1F; }

td { font-size: 13px; font-size: 0.8125rem; padding: 13px 20px; padding: 0.83333rem 1.25rem; border: solid 1px #DEDEDE; text-transform: uppercase; }
@media screen and (max-width: 530px) { td { display: block; border-top: none; } }

/* ----------------------------------------------
	5. Objects
---------------------------------------------- */
/* ----------------------------------------------
	6. Components
---------------------------------------------- */
/* ----------------------------------------------
	7-trumps
---------------------------------------------- */
.rel { position: relative !important; }

.w-auto { width: auto !important; }

.disabled { display: none !important; }

.mb0 { margin-bottom: 0 !important; }

.dib { display: inline-block !important; }

.mb0 { margin-bottom: 0 !important; }

.mb05 { margin-bottom: 10px !important; margin-bottom: 0.625rem !important; }

.mb1 { margin-bottom: 20px !important; margin-bottom: 1.25rem !important; }

.mb2 { margin-bottom: 40px !important; margin-bottom: 2.5rem !important; }

.mt0 { margin-top: 0 !important; }

.mt1 { margin-top: 20px !important; margin-top: 1.25rem !important; }

.mr05 { margin-right: 10px !important; margin-right: 0.625rem !important; }

.tac { text-align: center !important; }

.hidden { display: none !important; }

.text--large { font-size: 18px !important; font-size: 1.125rem !important; }

.disable-animation { -webkit-transition: none !important; transition: none !important; }



/*# sourceMappingURL=data:application/json;base64, */
